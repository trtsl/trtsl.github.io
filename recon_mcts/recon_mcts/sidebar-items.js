initSidebarItems({"enum":[["SelectNodeState","A flag indicating whether an action is being evaluated for exploration or exploitation."],["Status","Provides information about the result of applying a `GameDynamics::Action` to a `Tree`."]],"mod":[["state_memory","Provides mixins to statically configure how each node's state is stored in memory and compared for equality."]],"struct":[["ArcWrap","Newtype to allow for a custom `Drop` implementation that also gives access to the `Arc::strong_count`."],["GetState","Slower performance but better memory efficiency for large states."],["HashOnly","There's a chance of hash collision, which would mean that a parent node connects to an incorrect child node."],["Node","The fundamental type composing a `Tree`."],["NodeInfo","Contains information about a specific `Node`."],["RegistryInfo","Contains information about a `Tree`'s registry."],["StoreState","Memory usage is state dependent (could use lots of storage if states are large)."],["Tree","An acyclic collection of connected `Node`s with a unique root."],["WeakWrap","Newtype wrapping a [`std::sync::Weak`] with custom `Hash` and `Eq` implementations."]],"trait":[["BaseGD","A trait that can be used to implemented [`DynGD`] without implementing [`GameDynamics`]. `BaseGD` is automatically implemented for types that implemented `GameDynamics`."],["DynGD","A supertrait of [`BaseGD`].  Its purpose is to implement `GameDynamics` for trait objects. Implementing `DynGD` is only required if dynamic dispatch is needed."],["GameDynamics","Requires implementation by the user in order to provide the rules of the game and desired specifics of the algorithm."],["OnDrop","A trait used to remove nodes from the transposition table that are no longer reachable from the root. Generally for internal use."],["SearchTree","An interface to reduce the number of bounds required to use a `Tree` generically (i.e. the `SearchTree` trait is used to avoid having to list the bounds used to `implement` `SearchTree` for `Tree`)."],["StateMemory","A trait used to modify how states are stored in the transposition table.  Generally for internal use."]],"type":[["ArcNode","Convenience type alias."],["NodeAlias","Convenience type alias."],["TreeAlias","Convenience type alias."],["WeakNode","Convenience type alias."]]});